[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Decode Rate",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c2f3234821ca6cf4",
        "type": "group",
        "z": "f6f2187d.f17ca8",
        "name": "MQTT In / Split By System",
        "style": {
            "label": true,
            "stroke": "#a4a4a4",
            "fill": "#ffC000",
            "fill-opacity": "0.35",
            "color": "#000000"
        },
        "nodes": [
            "c1e432922fa00029",
            "b0bb904b4ccb67eb",
            "fb857c3673ae2fe5"
        ],
        "x": 34,
        "y": 19,
        "w": 612,
        "h": 82
    },
    {
        "id": "349a903d593b5b59",
        "type": "group",
        "z": "f6f2187d.f17ca8",
        "name": "Rate Graphs",
        "style": {
            "label": true
        },
        "nodes": [
            "4bc65225f695bc98",
            "129aca27c7a48608",
            "3e3a79c18038529e",
            "403ace56032f3716",
            "d5b8d5f3859f0e58",
            "069cf09a2db79c32",
            "259eb6a7d9b1e3c9",
            "bbdf01fc8fd1bea9",
            "e3018130b4124781"
        ],
        "x": 34,
        "y": 339,
        "w": 612,
        "h": 202
    },
    {
        "id": "8412bc8dfa3d7b83",
        "type": "group",
        "z": "f6f2187d.f17ca8",
        "name": "Rate Graphs",
        "style": {
            "label": true
        },
        "nodes": [
            "e0f1c77ec5737991",
            "5ef73b302479dad1",
            "a5503e1c3e3c26cb",
            "cbd6a59dc29c1e3b",
            "0b39952e705e3184",
            "7e335bb26d16b591",
            "2a1f442deaf8ab5c",
            "dd74a4db64d4c7a7",
            "48f72c40133373fa"
        ],
        "x": 34,
        "y": 119,
        "w": 612,
        "h": 202
    },
    {
        "id": "c1e432922fa00029",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "g": "c2f3234821ca6cf4",
        "name": "Rates In",
        "topic": "server/status/rates",
        "qos": "0",
        "datatype": "json",
        "broker": "61de5090.0f5d9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 60,
        "wires": [
            [
                "b0bb904b4ccb67eb"
            ]
        ]
    },
    {
        "id": "b0bb904b4ccb67eb",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "g": "c2f3234821ca6cf4",
        "name": "Split/Average",
        "func": "function roundToTwo(num) {\n    return +(Math.round(num + \"e+2\") + \"e-2\");\n}\n\nvar rateData = context.get(\"rateData\", \"memoryOnly\");\nif (rateData === undefined) {\n    rateData = {};\n    context.set(\"rateData\", rateData, \"memoryOnly\");\n}\n\nvar nextAvg = context.get(\"nextAvg\", \"memoryOnly\");\nif (nextAvg === undefined) {\n    nextAvg = Number(msg.payload.timestamp) + 60\n    context.set(\"nextAvg\", nextAvg, \"memoryOnly\");\n}\n\nvar dots = context.get(\"dots\", \"memoryOnly\");\ndots = (dots == undefined) || (dots == \"ring\") ? \"dot\" : \"ring\"\ncontext.set(\"dots\", dots, \"memoryOnly\");\n\nvar statusRates = \"\";\n\nfor (var i = 0; i < msg.payload.rates.length; i++) {\n\n    var decoderate = roundToTwo(msg.payload.rates[i][\"decoderate\"])\n    var sys_num = msg.payload.rates[i][\"sys_num\"]\n    var sys_name = msg.payload.rates[i][\"sys_name\"]\n    var freq = (msg.payload.rates[i][\"control_channel\"] / 1000000).toFixed(6)\n\n    if (rateData[sys_num] === undefined) {\n        rateData[sys_num] = {\n            \"rate\": 0,\n            \"count\": 0,\n            \"total\": 0,\n            \"avg\": 0,\n            \"min\": decoderate,\n            \"max\": decoderate,\n            \"freq\": freq\n        };\n    }\n\n    rateData[sys_num].rate = decoderate\n    rateData[sys_num].count += 1;\n    rateData[sys_num].total = roundToTwo(rateData[sys_num].total + decoderate);\n\n    rateData[sys_num].avg = roundToTwo(rateData[sys_num].total / rateData[sys_num].count);\n    if (decoderate > rateData[sys_num].max) { rateData[sys_num].max = decoderate; }\n    if (decoderate < rateData[sys_num].min) { rateData[sys_num].min = decoderate; }\n\n    rateData[sys_num].freq = freq;\n\n    var rate_msg = {\n        payload: Number(decoderate),\n        stat: \"rate\",\n        caption: sys_name + \" [\" + sys_num + \"] \" + freq,\n        target: sys_num,\n    }\n\n    statusRates = (statusRates == \"\") ? rateData[sys_num].count + \": \" + decoderate : statusRates + \", \" + decoderate;\n    node.send(rate_msg);\n\n    node.status({ fill: \"green\", shape: dots, text: statusRates });\n}\n\nif (Number(msg.payload.timestamp) >= Number(nextAvg)) {\n    const outputs = [\"avg\", \"min\", \"max\"];\n\n    for (let system in rateData) {\n        for (var key in outputs) {\n            var stat_msg = {\n                target: system,\n                stat: outputs[key],\n                topic: rateData[system][\"freq\"],\n                payload: rateData[system][outputs[key]]\n            }\n            node.send(stat_msg);\n        }\n    }\n    node.status({ fill: \"yellow\", shape: dots, text: \"sent \" + statusRates });\n\n    nextAvg = Number(msg.payload.timestamp) + 60\n    context.set(\"nextAvg\", nextAvg, \"memoryOnly\");\n\n    rateData = {}\n}\n\ncontext.set(\"rateData\", rateData, \"memoryOnly\");\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nnode.status({fill:\"yellow\",shape:\"dot\",text:\"waiting\"});",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 60,
        "wires": [
            [
                "fb857c3673ae2fe5"
            ]
        ]
    },
    {
        "id": "fb857c3673ae2fe5",
        "type": "link call",
        "z": "f6f2187d.f17ca8",
        "g": "c2f3234821ca6cf4",
        "name": "To sys_num",
        "links": [],
        "linkType": "dynamic",
        "timeout": "10",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4bc65225f695bc98",
        "type": "ui_gauge",
        "z": "f6f2187d.f17ca8",
        "g": "349a903d593b5b59",
        "name": "Gage2",
        "group": "abfe55af0b4b35df",
        "order": 7,
        "width": 8,
        "height": 6,
        "gtype": "gage",
        "title": "<b>{{msg.caption}}</b>",
        "label": "msg/s",
        "format": "{{value | number:0}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "10",
        "seg2": "25",
        "diff": false,
        "className": "",
        "x": 450,
        "y": 380,
        "wires": []
    },
    {
        "id": "129aca27c7a48608",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "g": "349a903d593b5b59",
        "name": "Grph2",
        "group": "abfe55af0b4b35df",
        "order": 8,
        "width": 15,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "3e3a79c18038529e",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "g": "349a903d593b5b59",
        "group": "abfe55af0b4b35df",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "Min2",
        "label": "Min:",
        "format": "{{msg.payload | number:0}} msg/s",
        "layout": "col-center",
        "className": "",
        "x": 450,
        "y": 460,
        "wires": []
    },
    {
        "id": "403ace56032f3716",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "g": "349a903d593b5b59",
        "group": "abfe55af0b4b35df",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "Avg2",
        "label": "Avg:  ",
        "format": "{{msg.payload | number:1}} msg/s",
        "layout": "col-center",
        "className": "",
        "x": 450,
        "y": 420,
        "wires": []
    },
    {
        "id": "d5b8d5f3859f0e58",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "g": "349a903d593b5b59",
        "group": "abfe55af0b4b35df",
        "order": 9,
        "width": 2,
        "height": 1,
        "name": "Max2",
        "label": "Max:",
        "format": "{{msg.payload | number:0}} msg/s",
        "layout": "col-center",
        "className": "",
        "x": 450,
        "y": 500,
        "wires": []
    },
    {
        "id": "069cf09a2db79c32",
        "type": "link in",
        "z": "f6f2187d.f17ca8",
        "g": "349a903d593b5b59",
        "name": "3",
        "links": [],
        "x": 110,
        "y": 380,
        "wires": [
            [
                "259eb6a7d9b1e3c9",
                "bbdf01fc8fd1bea9"
            ]
        ],
        "l": true
    },
    {
        "id": "259eb6a7d9b1e3c9",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "g": "349a903d593b5b59",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 310,
        "y": 380,
        "wires": [],
        "l": true
    },
    {
        "id": "bbdf01fc8fd1bea9",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "g": "349a903d593b5b59",
        "name": "",
        "property": "stat",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "rate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "avg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 310,
        "y": 440,
        "wires": [
            [
                "4bc65225f695bc98"
            ],
            [
                "403ace56032f3716",
                "129aca27c7a48608"
            ],
            [
                "3e3a79c18038529e"
            ],
            [
                "d5b8d5f3859f0e58"
            ]
        ]
    },
    {
        "id": "e3018130b4124781",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "g": "349a903d593b5b59",
        "name": "Clear Chart",
        "props": [
            {
                "p": "stat",
                "v": "avg",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "bbdf01fc8fd1bea9"
            ]
        ]
    },
    {
        "id": "e0f1c77ec5737991",
        "type": "ui_gauge",
        "z": "f6f2187d.f17ca8",
        "g": "8412bc8dfa3d7b83",
        "name": "Gage",
        "group": "abfe55af0b4b35df",
        "order": 1,
        "width": 8,
        "height": 7,
        "gtype": "gage",
        "title": "<b>{{msg.caption}}</b>",
        "label": "msg/s",
        "format": "{{value | number:0}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "10",
        "seg2": "25",
        "diff": false,
        "className": "",
        "x": 450,
        "y": 160,
        "wires": []
    },
    {
        "id": "5ef73b302479dad1",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "g": "8412bc8dfa3d7b83",
        "name": "Graph",
        "group": "abfe55af0b4b35df",
        "order": 2,
        "width": 15,
        "height": 9,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a5503e1c3e3c26cb",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "g": "8412bc8dfa3d7b83",
        "group": "abfe55af0b4b35df",
        "order": 3,
        "width": 2,
        "height": 1,
        "name": "Min",
        "label": "Min:",
        "format": "{{msg.payload | number:0}} msg/s",
        "layout": "col-center",
        "className": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "cbd6a59dc29c1e3b",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "g": "8412bc8dfa3d7b83",
        "group": "abfe55af0b4b35df",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "Avg",
        "label": "Avg:  ",
        "format": "{{msg.payload | number:1}} msg/s",
        "layout": "col-center",
        "className": "",
        "x": 450,
        "y": 200,
        "wires": []
    },
    {
        "id": "0b39952e705e3184",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "g": "8412bc8dfa3d7b83",
        "group": "abfe55af0b4b35df",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "Max",
        "label": "Max:",
        "format": "{{msg.payload | number:0}} msg/s",
        "layout": "col-center",
        "className": "",
        "x": 450,
        "y": 280,
        "wires": []
    },
    {
        "id": "7e335bb26d16b591",
        "type": "link in",
        "z": "f6f2187d.f17ca8",
        "g": "8412bc8dfa3d7b83",
        "name": "2",
        "links": [],
        "x": 110,
        "y": 160,
        "wires": [
            [
                "2a1f442deaf8ab5c",
                "dd74a4db64d4c7a7"
            ]
        ],
        "l": true
    },
    {
        "id": "2a1f442deaf8ab5c",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "g": "8412bc8dfa3d7b83",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 310,
        "y": 160,
        "wires": [],
        "l": true
    },
    {
        "id": "dd74a4db64d4c7a7",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "g": "8412bc8dfa3d7b83",
        "name": "",
        "property": "stat",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "rate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "avg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "e0f1c77ec5737991"
            ],
            [
                "5ef73b302479dad1",
                "cbd6a59dc29c1e3b"
            ],
            [
                "a5503e1c3e3c26cb"
            ],
            [
                "0b39952e705e3184"
            ]
        ]
    },
    {
        "id": "48f72c40133373fa",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "g": "8412bc8dfa3d7b83",
        "name": "Clear Chart",
        "props": [
            {
                "p": "stat",
                "v": "avg",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "dd74a4db64d4c7a7"
            ]
        ]
    },
    {
        "id": "c7d73ddd507f718e",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "README",
        "info": "1. Set the MQTT server and topic in \"Rates In\"\n    `trunk/status/rates`\n2. Make a copy of the \"Rate Graphs\" group for each trunked system\n3. Set the name of the \"Link In\" block in each group to match trunked `sysNum`s\n4. Adjust the dashboard widgets as needed",
        "x": 720,
        "y": 40,
        "wires": []
    },
    {
        "id": "5f7a4924f3bad91f",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "abfe55af0b4b35df",
        "order": 6,
        "width": 8,
        "height": 1
    },
    {
        "id": "d635444b2a86f476",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "abfe55af0b4b35df",
        "order": 12,
        "width": 8,
        "height": 1
    },
    {
        "id": "61de5090.0f5d9",
        "type": "mqtt-broker",
        "name": "Local MQTT Server",
        "broker": "192.168.1.20",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "abfe55af0b4b35df",
        "type": "ui_group",
        "name": "Trunk-Recorder Decode Rate",
        "tab": "17abf982f867ca32",
        "order": 2,
        "disp": true,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "17abf982f867ca32",
        "type": "ui_tab",
        "name": "Decode Rate",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]